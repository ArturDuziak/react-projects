version: 2.1

parameters:
  repo_path:
    description: the path where the repository is cloned into
    type: string
    default: ~/app

executors:
  node-machine:
    working_directory: << pipeline.parameters.repo_path >>
    docker:
      - image: circleci/node:12.18.0-stretch

  cypress-machine:
    description: Docker container with Node 12, Cypress dependencies and Chrome 87
    docker:
      - image: cypress/browsers:node12.18.3-chrome87-ff82

jobs:
  checkout_code:
    executor: node-machine
    steps:
      - checkout
      - persist_to_workspace:
          root: << pipeline.parameters.repo_path >>
          paths:
            - .

  lint:
    executor: node-machine
    steps:
      - attach_workspace:
          at: << pipeline.parameters.repo_path >>
      - run:
          name: Run linter
          command: yarn run lint

  install_dependencies:
    executor: node-machine
    steps:
      - attach_workspace:
          at: << pipeline.parameters.repo_path >>
      - restore_cache:
          keys:
            - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies based on lockfile
          command: yarn install --frozen-lockfile
      - save_cache:
          key: yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress
      - persist_to_workspace:
          root: << pipeline.parameters.repo_path >>
          paths:
            - node_modules

  run_cypress:
    executor: cypress-machine
    steps:
      - attach_workspace:
          at: << pipeline.parameters.repo_path >>
      - restore_cache:
          keys:
            - yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "<< pipeline.parameters.repo_path >>/yarn.lock" }}
            - yarn-packages-{{ .Environment.CACHE_VERSION }}-
      - run:
          name: Install Cypress dependencies
          command: cd << pipeline.parameters.repo_path >> && yarn install --frozen-lockfile && yarn cypress install
      - run:
          name: Verify that Cypress is installed correctly and is executable
          command: cd << pipeline.parameters.repo_path >> && npx cypress verify
      - save_cache:
          key: yarn-packages-{{ .Environment.CACHE_VERSION }}-{{ checksum "<< pipeline.parameters.repo_path >>/yarn.lock" }}
          paths:
            - ~/.cache/Cypress
      - run:
          name: Start up the app
          command: cd << pipeline.parameters.repo_path >> && yarn start
          background: true
      - run:
          name: Waiting for server...
          command: cd << pipeline.parameters.repo_path >> && yarn wait-on http://localhost:3000 && echo local server ready!
      - run:
          name: Run e2e tests
          command: cd << pipeline.parameters.repo_path >> && yarn cypress:run --browser chrome --headless
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots
      - store_test_results:
          path: test-results

workflows:
  build:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      # - lint:
      #     requires:
      #       - install_dependencies
      - run_cypress:
          requires:
            - install_dependencies

      # - cypress/install:
      #     requires:
      #       - lint
      # - cypress/run:
      #     requires:
      #       - cypress/install
      #     attach-workspace: true
      #     yarn: true
      #     start: npm start
      #     wait-on: "http://localhost:3000"
      #     store_artifacts: true
      #  - store_test_results:
      #     path: test-results
